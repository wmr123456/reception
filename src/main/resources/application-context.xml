<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://mybatis.org/schema/mybatis-spring
          http://mybatis.org/schema/mybatis-spring.xsd"
       default-autowire="byName">
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>
    <context:property-placeholder location="classpath:jdbc.properties"/>


    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="select 1"></property>
        <property name="initialSize" value="10"/>
        <!--maxActive: 最大连接数量 0代表无限制-->
        <property name="maxActive" value="2000"/>
        <!--maxIdle: 最大空闲连接-->
        <property name="maxIdle" value="200"/>
        <!--minIdle: 最小空闲连接-->
        <property name="minIdle" value="5"/>

        <property name="testWhileIdle" value="true"/>
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->
        <property name="maxWait" value="1000"/>
    </bean>

    <!--<bean id="sessionFactory"-->
    <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
    <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--<property name="hibernateProperties">-->
    <!--<props>-->
    <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
    <!--<prop key="hibernate.show_sql">true</prop>-->
    <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
    <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>-->
    <!--<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>-->
    <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
    <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
    <!--<prop key="hibernate.cache.use_structured_entries">true</prop>-->
    <!--<prop key="hibernate.cache.provider_configuration_file_resource_path">WEB-INF/classes/ehcache.xml</prop>-->
    <!--<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--<property name="packagesToScan">-->
    <!--<list>-->
    <!--<value>com.shinowit.entity</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="transactionManager"-->
    <!--class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
    <!--<property name="sessionFactory" ref="sessionFactory"></property>-->
    <!--</bean>-->

    <!--
define the SqlSessionFactory, notice that configLocation is not needed
when you use MapperFactoryBean
-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <mybatis:scan base-package="com.shinowit.dao.mapper"/>
    <!--&lt;!&ndash; scan for mappers and let them be autowired &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="com.shinowit.dao.mapper"/>-->
    <!--</bean>-->

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 自动扫描组件，需要把controller去掉，否则影响事务管理 -->
    <context:component-scan base-package="com.shinowit">
        <context:exclude-filter type="regex" expression="com.shinowit.web.*"/>
    </context:component-scan>

    <bean id="log4jdbcInterceptor" class="net.sf.log4jdbc.DataSourceSpyInterceptor"/>
    <bean id="dataSourceLog4jdbcAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <value>log4jdbcInterceptor</value>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>dataSource</value>
            </list>
        </property>
    </bean>
    <!--
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
    <tx:method name="get*" read-only="true" propagation="REQUIRED" />
    <tx:method name="find*" read-only="true" propagation="REQUIRED" />
    <tx:method name="query*" read-only="true" propagation="REQUIRED" />
    <tx:method name="list*" read-only="true" propagation="REQUIRED" />
    <tx:method name="isExist*" read-only="true" propagation="REQUIRED" />
    <tx:method name="insert*" propagation="REQUIRED" />
    <tx:method name="update*" propagation="REQUIRED" />
    <tx:method name="create*" propagation="REQUIRED" />
    <tx:method name="del*" propagation="REQUIRED" />
    <tx:method name="save*" propagation="REQUIRED" />
    <tx:method name="*" propagation="REQUIRED" />
    </tx:attributes>
    </tx:advice>

     <aop:config>
    <aop:pointcut expression="execution(* com.shinowit.framework.dao..*.*(..))"
    id="bussinessService" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService" />
    </aop:config>

    <aop:config>
    <aop:pointcut expression="execution(* com.shinowit.dao..*.*(..))"
    id="bussinessService1" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService1" />
    </aop:config>
     -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- 服务器 -->
        <property name="host" value="smtp.qq.com"/>
        <!-- 端口号 -->
        <property name="port" value="25"/>
        <!-- 用户名 -->
        <property name="username" value="2293072719@qq.com"/>
        <!--  密码   -->
        <property name="password" value="wmr120605"/>
        <!-- SMTP服务器验证 -->
        <property name="javaMailProperties">
            <props>
                <!-- 验证身份 -->
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>
    <!--
       目前我用过的EMAIL账号都是网易的,下面列出网易的SMTP服务器名和端口号:
        网易邮箱          SMTP服务器     SMTP端口     POP3服务器       POP3端口
        @126.com     smtp.126.com      25          pop3.126.com      110
        @163.com     smtp.163.com      25          pop3.163.com      110
        @yeah.net    smtp.yeah.net      25          pop3.yeah.net     110
    -->

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <!-- 发件人email -->
        <property name="from" value="2293072719@qq.com"/>
        <!--
         收件人email
        <property name="to" value="to@yeah.net" />
        email主题(标题)
        <property name="subject" value="Subject" />
        email主题内容
        <property name="text">
          <value>ContentText</value>
        </property>
        -->
    </bean>
    <bean id="simpleMail" class="com.shinowit.tools.Email">
        <property name="mailSender" ref="mailSender"></property>
        <property name="simpleMailMessage" ref="simpleMailMessage"></property>
    </bean>

    <bean id="htmlMail" class="com.shinowit.tools.HtmlMail">
        <property name="smptServer" value="smtp.qq.com"></property>
        <property name="sentFromEmail" value="2293072719@qq.com"></property>
        <property name="password" value="wmr120605"></property>
    </bean>

</beans>

